{"version":3,"sources":["wave.js","audio.js","App.js","serviceWorker.js","index.js"],"names":["window","onload","AudioContext","audioContent","path","paths","document","getElementsByTagName","visualizer","getElementById","mask","h","hSub","start","permission","seconds","soundAllowed","stream","audioStream","createMediaStreamSource","analyser","createAnalyser","fftSize","connect","bufferLength","frequencyBinCount","frequencyArray","Uint8Array","setAttribute","i","createElementNS","appendChild","doDraw","requestAnimationFrame","adjustedLength","getByteFrequencyData","Math","floor","showVolume","setTimeout","total","x","rms","sqrt","db","log","max","innerHTML","soundNotAllowed","error","console","onclick","this","className","navigator","mediaDevices","getUserMedia","audio","then","catch","webkitAudioContext","file","audioURL","a","formData","FormData","append","settings","$","ajax","done","response","undefined","constraintObj","webkitGetUserMedia","mozGetUserMedia","Promise","resolve","reject","call","Error","enumerateDevices","devices","forEach","device","kind","toUpperCase","label","err","name","message","mediaStreamObj","button","vidSave","hidden","mediaRecorder","MediaRecorder","chunks","recordingTimes","addEventListener","ev","stop","Date","duration","end","state","length","ondataavailable","push","data","onstop","blob","Blob","URL","createObjectURL","src","sendAudioFile","App","preserveAspectRatio","id","version","xmlns","xmlnsXlink","x1","y1","x2","y2","offset","style","stopColor","stopOpacity","y","width","height","fill","controls","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74d3c78a.chunk.js","sourcesContent":["\"use strict\";\r\n\r\nwindow.onload = function () {\r\n  \"use strict\";\r\n\r\n  var paths = document.getElementsByTagName('path');\r\n  var visualizer = document.getElementById('visualizer');\r\n  var mask = visualizer.getElementById('mask');\r\n  var h = document.getElementsByTagName('h1')[0];\r\n  var hSub = document.getElementsByTagName('h1')[1];\r\n  var AudioContext;\r\n  var audioContent;\r\n  var start = false;\r\n  var permission = false;\r\n  var path;\r\n  var seconds = 0;\r\n  var loud_volume_threshold = 30;\r\n\r\n  var soundAllowed = function soundAllowed(stream) {\r\n    permission = true;\r\n    var audioStream = audioContent.createMediaStreamSource(stream);\r\n    var analyser = audioContent.createAnalyser();\r\n    var fftSize = 1024;\r\n    analyser.fftSize = fftSize;\r\n    audioStream.connect(analyser);\r\n    var bufferLength = analyser.frequencyBinCount;\r\n    var frequencyArray = new Uint8Array(bufferLength);\r\n    visualizer.setAttribute('viewBox', '0 0 255 255');\r\n\r\n    for (var i = 0; i < 255; i++) {\r\n      path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n      path.setAttribute('stroke-dasharray', '4,1');\r\n      mask.appendChild(path);\r\n    }\r\n\r\n    var doDraw = function doDraw() {\r\n      requestAnimationFrame(doDraw);\r\n\r\n      if (start) {\r\n        analyser.getByteFrequencyData(frequencyArray);\r\n        var adjustedLength;\r\n\r\n        for (var i = 0; i < 255; i++) {\r\n          adjustedLength = Math.floor(frequencyArray[i]) - Math.floor(frequencyArray[i]) % 5;\r\n          paths[i].setAttribute('d', 'M ' + i + ',255 l 0,-' + adjustedLength);\r\n        }\r\n      } else {\r\n        for (var i = 0; i < 255; i++) {\r\n          paths[i].setAttribute('d', 'M ' + i + ',255 l 0,-' + 0);\r\n        }\r\n      }\r\n    };\r\n\r\n    var showVolume = function showVolume() {\r\n      setTimeout(showVolume, 500);\r\n\r\n      if (start) {\r\n        analyser.getByteFrequencyData(frequencyArray);\r\n        var total = 0;\r\n\r\n        for (var i = 0; i < 255; i++) {\r\n          var x = frequencyArray[i];\r\n          total += x * x;\r\n        }\r\n\r\n        var rms = Math.sqrt(total / bufferLength);\r\n        var db = 20 * (Math.log(rms) / Math.log(10));\r\n        db = Math.max(db, 0); // sanity check\r\n\r\n        h.innerHTML = Math.floor(db) + \" dB\";\r\n\r\n        if (db >= loud_volume_threshold) {\r\n          seconds += 0.5;\r\n\r\n          if (seconds >= 5) {\r\n            hSub.innerHTML = \"Youâ€™ve been in loud environment for<span> \" + Math.floor(seconds) + \" </span>seconds.\";\r\n          }\r\n        } else {\r\n          seconds = 0;\r\n          hSub.innerHTML = \"\";\r\n        }\r\n      } else {\r\n        h.innerHTML = \"\";\r\n        hSub.innerHTML = \"\";\r\n      }\r\n    };\r\n\r\n    doDraw();\r\n    showVolume();\r\n  };\r\n\r\n  var soundNotAllowed = function soundNotAllowed(error) {\r\n    h.innerHTML = \"You must allow your microphone.\";\r\n    console.log(error);\r\n  };\r\n\r\n  document.getElementById('button').onclick = function () {\r\n    if (start) {\r\n      start = false;\r\n      this.innerHTML = \"<span class='fa fa-play'></span>Start Listen\";\r\n      this.className = \"green-button btn-circle btn-sm btn-xl btn-md\";\r\n    } else {\r\n      if (!permission) {\r\n        navigator.mediaDevices.getUserMedia({\r\n          audio: true\r\n        }).then(soundAllowed).catch(soundNotAllowed);\r\n        AudioContext = window.AudioContext || window.webkitAudioContext;\r\n        audioContent = new AudioContext();\r\n      }\r\n\r\n      start = true;\r\n      this.innerHTML = \"<span class='fa fa-stop'></span>Stop Listen\";\r\n      this.className = \"red-button btn-circle btn-sm btn-xl btn-md\";\r\n    }\r\n  };\r\n};","import $ from 'jQuery';\r\nlet constraintObj = { \r\n    audio: true,   \r\n}; \r\n\r\n//handle older browsers that might implement getUserMedia in some way\r\nif (navigator.mediaDevices === undefined) {\r\n    navigator.mediaDevices = {};\r\n    navigator.mediaDevices.getUserMedia = function(constraintObj) {\r\n        let getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n        if (!getUserMedia) {\r\n            return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\r\n        }\r\n        return new Promise(function(resolve, reject) {\r\n            getUserMedia.call(navigator, constraintObj, resolve, reject);\r\n        });\r\n    }\r\n}else{\r\n    navigator.mediaDevices.enumerateDevices()\r\n    .then(devices => {\r\n        devices.forEach(device=>{\r\n            console.log(device.kind.toUpperCase(), device.label);\r\n            //, device.deviceId\r\n        })\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.name, err.message);\r\n    })\r\n}\r\n\r\nnavigator.mediaDevices.getUserMedia(constraintObj)\r\n.then(function(mediaStreamObj) {\r\n    //connect the media stream to the first audio element\r\n    // let audio = document.querySelector('audio');\r\n    // if (\"srcObject\" in audio) {\r\n    //     audio.srcObject = mediaStreamObj;\r\n    // } else {\r\n    //     //old version\r\n    //     audio.src = window.URL.createObjectURL(mediaStreamObj);\r\n    // }\r\n    \r\n    // audio.onloadedmetadata = function(ev) {\r\n    //     //show in the audio element what is being captured by the webcam\r\n    //     audio.play();        \r\n    // };\r\n    \r\n    //add listeners for saving audio/audio\r\n    let button = document.getElementById('button'); \r\n    let vidSave = document.getElementById('audio2');\r\n    vidSave.hidden=true;\r\n    let mediaRecorder = new MediaRecorder(mediaStreamObj);\r\n    let chunks = [];\r\n   let start=false;\r\n   const recordingTimes={};\r\n    button.addEventListener('click', (ev)=>{\r\n        if(start)\r\n        {\r\n            start=false;\r\n            mediaRecorder.stop();\r\n            recordingTimes.stop=+new Date();\r\n            recordingTimes.duration=(recordingTimes.end-recordingTimes.start)/100;\r\n            console.log(mediaRecorder.state, \"Time\"+recordingTimes.duration);\r\n            this.innerHTML = \"<span class='fa fa-play'></span>\";\r\n            this.className = \"green-button btn-circle btn-sm btn-xl btn-md\";\r\n        }\r\n        else{\r\n            mediaRecorder.start();\r\n            recordingTimes.start=+new Date();\r\n            chunks.length = 0;\r\n            console.log(mediaRecorder.state);\r\n            start=true;\r\n            this.innerHTML = \"<span class='fa fa-stop'></span>\";\r\n      this.className = \"red-button btn-circle btn-sm btn-xl btn-md\";\r\n        }\r\n        \r\n    }) \r\n    mediaRecorder.ondataavailable = function(ev) {\r\n        chunks.push(ev.data);\r\n    }\r\n    mediaRecorder.onstop = (ev)=>{\r\n        let blob = new Blob(chunks, { 'type' : 'audio/mp3;' });        \r\n        chunks = [];\r\n        let audioURL = window.URL.createObjectURL(blob);\r\n        vidSave.src=audioURL;\r\n        vidSave.hidden=false;\r\n        sendAudioFile(blob,audioURL);\r\n    //  Posting to the server       \r\n    }\r\n})\r\n.catch(function(err) { \r\n    console.log(err.name, err.message); \r\n});\r\n  async function sendAudioFile(file,audioURL) {\r\n    const formData = new FormData();\r\n    console.log(audioURL);\r\n    formData.append(\"file\", file, audioURL+\".mp3\");\r\n    var settings = {\r\n        \"url\": \"http://127.0.0.1:8000/upload/\",\r\n        \"method\": \"POST\",\r\n        \"timeout\": 0,\r\n        \"processData\": false,\r\n        \"mimeType\": \"audio/mp3\",\r\n        \"contentType\": false,\r\n        \"data\": formData\r\n        };\r\n        $.ajax(settings).done(function(response){\r\n            console.log(response);\r\n        })\r\n  }\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './audio.js';\nimport './wave.js';\nfunction App() {\n  return (\n    <div className=\"App\">\n    <svg preserveAspectRatio=\"none\" id=\"visualizer\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n      <defs>\n        <mask id=\"mask\">\n          <g id=\"maskGroup\" />\n        </mask>\n        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n          <stop offset=\"0%\" style={{stopColor: '#db6247', stopOpacity: 1}} />\n          <stop offset=\"40%\" style={{stopColor: '#f6e5d1', stopOpacity: 1}} />\n          <stop offset=\"60%\" style={{stopColor: '#5c79c7', stopOpacity: 1}} />\n          <stop offset=\"85%\" style={{stopColor: '#b758c0', stopOpacity: 1}} />\n          <stop offset=\"100%\" style={{stopColor: '#222', stopOpacity: 1}} />\n        </linearGradient>\n      </defs>\n      <rect x={0} y={0} width=\"100%\" height=\"100%\" fill=\"url(#gradient)\" mask=\"url(#mask)\" />\n    </svg>\n    <h1 className=\"main-text\">Please allow the use of your microphone.</h1>\n    <h1 className=\"sub-text\" />\n    <div className=\"button-container\"><button id=\"button\" className=\"green-button btn-circle btn-sm btn-xl btn-md\" ><span className=\"fa fa-play\" /></button>\n    <br></br>\n    <p><audio id=\"audio2\" controls></audio></p>\n    \n    </div>\n    \n  </div>\n  \n);\n\n  \n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}